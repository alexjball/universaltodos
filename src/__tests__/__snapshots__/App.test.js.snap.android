// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
Object {
  "asJSON": [Function],
  "baseElement": <View
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={true}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#F5FCFF",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <View
          style={
            Object {
              "borderRadius": 3,
              "marginTop": 10,
              "overflow": "hidden",
            }
          }
        >
          <TouchableNativeFeedback
            accessibilityLabel="add task"
            accessibilityRole="button"
            accessibilityState={
              Object {
                "busy": false,
                "disabled": false,
              }
            }
            activeOpacity={0.3}
            background={
              Object {
                "attribute": "selectableItemBackground",
                "type": "ThemeAttrAndroid",
              }
            }
            delayPressIn={0}
            disabled={false}
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#2089dc",
                  "borderColor": "#2089dc",
                  "borderRadius": 3,
                  "borderWidth": 0,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 8,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "white",
                    "fontFamily": "sans-serif-medium",
                    "fontSize": 16,
                    "paddingBottom": 1,
                    "paddingTop": 2,
                    "textAlign": "center",
                  }
                }
              >
                Add Task
              </Text>
            </View>
          </TouchableNativeFeedback>
        </View>
      </View>
    </View>
  </View>,
  "container": <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#F5FCFF",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "borderRadius": 3,
            "marginTop": 10,
            "overflow": "hidden",
          }
        }
      >
        <TouchableNativeFeedback
          accessibilityLabel="add task"
          accessibilityRole="button"
          accessibilityState={
            Object {
              "busy": false,
              "disabled": false,
            }
          }
          activeOpacity={0.3}
          background={
            Object {
              "attribute": "selectableItemBackground",
              "type": "ThemeAttrAndroid",
            }
          }
          delayPressIn={0}
          disabled={false}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2089dc",
                "borderColor": "#2089dc",
                "borderRadius": 3,
                "borderWidth": 0,
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 8,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "white",
                  "fontFamily": "sans-serif-medium",
                  "fontSize": 16,
                  "paddingBottom": 1,
                  "paddingTop": 2,
                  "textAlign": "center",
                }
              }
            >
              Add Task
            </Text>
          </View>
        </TouchableNativeFeedback>
      </View>
    </View>
  </View>,
  "debug": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByHintText": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByDisplayValue": [Function],
  "findByHintText": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByHintText": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByDisplayValue": [Function],
  "getByHintText": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByHintText": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByDisplayValue": [Function],
  "queryByHintText": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
